ID: 1
Nombre: data.stringify - string
Utilidad: jtEssentials.data.stringify("test")
Esperado: "{\"type\":\"string\",\"data\":\"test\"}"
Obtenido: "{\"type\":\"string\",\"data\":\"test\"}"
Aprobado: Sí

ID: 2
Nombre: data.stringify - number
Utilidad: jtEssentials.data.stringify(123)
Esperado: "{\"type\":\"number\",\"data\":\"123\"}"
Obtenido: "{\"type\":\"number\",\"data\":\"123\"}"
Aprobado: Sí

ID: 3
Nombre: data.stringify - boolean
Utilidad: jtEssentials.data.stringify(true)
Esperado: "{\"type\":\"boolean\",\"data\":\"true\"}"
Obtenido: "{\"type\":\"boolean\",\"data\":\"true\"}"
Aprobado: Sí

ID: 4
Nombre: data.stringify - object
Utilidad: jtEssentials.data.stringify({a:1})
Esperado: "{\"type\":\"object\",\"data\":\"{\\\"a\\\":1}\"}"
Obtenido: "{\"type\":\"object\",\"data\":\"{\\\"a\\\":1}\"}"
Aprobado: Sí

ID: 5
Nombre: data.stringify - encrypted
Utilidad: jtEssentials.data.stringify("test", "key")
Esperado: "85Gfkt/pZLbHyIFPSbFi5TQQYwSjpb7DnWcM5ejzBKTgQ9c0mZ3VkI"
Obtenido: "+mSBnSjSoddzRaCHsCmT2gOIROc+2lKeLidNAFZMGsSlgbXc6jWKzE"
Aprobado: No

ID: 6
Nombre: data.parse - string
Utilidad: jtEssentials.data.parse('{"type":"string","data":"test"}')
Esperado: "test"
Obtenido: "test"
Aprobado: Sí

ID: 7
Nombre: data.parse - number
Utilidad: jtEssentials.data.parse('{"type":"number","data":"123"}')
Esperado: 123
Obtenido: 123
Aprobado: Sí

ID: 8
Nombre: data.parse - boolean
Utilidad: jtEssentials.data.parse('{"type":"boolean","data":"true"}')
Esperado: true
Obtenido: true
Aprobado: Sí

ID: 9
Nombre: data.parse - object
Utilidad: jtEssentials.data.parse('{"type":"object","data":"{\\"a\\":1}"}')
Esperado: {"a":1}
Obtenido: {"a":1}
Aprobado: Sí

ID: 10
Nombre: data.parse - encrypted
Utilidad: jtEssentials.data.parse(encryptedStr, "key")
Esperado: "test"
Obtenido: "test"
Aprobado: Sí

ID: 11
Nombre: data.encrypt/decrypt
Utilidad: jtEssentials.data.decrypt(jtEssentials.data.encrypt("test data", "key"), "key")
Esperado: "test data"
Obtenido: "test data"
Aprobado: Sí

ID: 12
Nombre: data.usid
Utilidad: jtEssentials.data.usid("test name")
Esperado: "f0f7b7b21cfd4f60934753232a0049f6"
Obtenido: "f0f7b7b21cfd4f60934753232a0049f6"
Aprobado: Sí

ID: 13
Nombre: text.capitalize - all words
Utilidad: jtEssentials.text.capitalize("hello world", true)
Esperado: "Hello World"
Obtenido: "Hello World"
Aprobado: Sí

ID: 14
Nombre: text.capitalize - first word
Utilidad: jtEssentials.text.capitalize("hello world")
Esperado: "Hello world"
Obtenido: "Hello world"
Aprobado: Sí

ID: 15
Nombre: text.camelCase
Utilidad: jtEssentials.text.camelCase("hello world test")
Esperado: "helloWorldTest"
Obtenido: "helloWorldTest"
Aprobado: Sí

ID: 16
Nombre: text.kebabCase
Utilidad: jtEssentials.text.kebabCase("Hello World Test")
Esperado: "hello-world-test"
Obtenido: "hello-world-test"
Aprobado: Sí

ID: 17
Nombre: text.snakeCase
Utilidad: jtEssentials.text.snakeCase("Hello World Test")
Esperado: "hello_world_test"
Obtenido: "hello_world_test"
Aprobado: Sí

ID: 18
Nombre: text.reverse
Utilidad: jtEssentials.text.reverse("hello")
Esperado: "olleh"
Obtenido: "olleh"
Aprobado: Sí

ID: 19
Nombre: text.normalize
Utilidad: jtEssentials.text.normalize("café naïve")
Esperado: "cafe naive"
Obtenido: "cafenaive"
Aprobado: No

ID: 20
Nombre: date.format
Utilidad: jtEssentials.date.format(new Date("2023-01-15T10:30:45"))
Esperado: "15/01/2023 10:30:45"
Obtenido: "15/01/2023 10:30:45"
Aprobado: Sí

ID: 21
Nombre: date.daysBetween
Utilidad: jtEssentials.date.daysBetween(new Date("2023-01-01"), new Date("2023-01-15"))
Esperado: 14
Obtenido: 14
Aprobado: Sí

ID: 22
Nombre: date.time.add
Utilidad: jtEssentials.date.time.add(date, {hours:2, minutes:30})
Esperado: "15/01/2023 13:00:45"
Obtenido: "NaN/NaN/NaN NaN:NaN:NaN"
Aprobado: No

ID: 23
Nombre: date.time.sub
Utilidad: jtEssentials.date.time.sub(date, {hours:1, minutes:15})
Esperado: "15/01/2023 09:15:45"
Obtenido: "NaN/NaN/NaN NaN:NaN:NaN"
Aprobado: No

ID: 24
Nombre: date.days.add
Utilidad: jtEssentials.date.days.add(date, 5)
Esperado: "20/01/2023 00:00:00"
Obtenido: "19/01/2023 21:00:00"
Aprobado: No

ID: 25
Nombre: date.days.sub
Utilidad: jtEssentials.date.days.sub(date, 3)
Esperado: "12/01/2023 00:00:00"
Obtenido: "11/01/2023 21:00:00"
Aprobado: No

ID: 26
Nombre: date.months.add
Utilidad: jtEssentials.date.months.add(date, 2)
Esperado: "15/03/2023 00:00:00"
Obtenido: "14/03/2023 21:00:00"
Aprobado: No

ID: 27
Nombre: date.months.sub
Utilidad: jtEssentials.date.months.sub(date, 1)
Esperado: "15/12/2022 00:00:00"
Obtenido: "14/12/2022 21:00:00"
Aprobado: No

ID: 28
Nombre: date.years.add
Utilidad: jtEssentials.date.years.add(date, 1)
Esperado: "15/01/2024 00:00:00"
Obtenido: "14/01/2024 21:00:00"
Aprobado: No

ID: 29
Nombre: date.years.sub
Utilidad: jtEssentials.date.years.sub(date, 2)
Esperado: "15/01/2021 00:00:00"
Obtenido: "14/01/2021 21:00:00"
Aprobado: No

ID: 30
Nombre: date.getAge
Utilidad: jtEssentials.date.getAge("1990-05-15")
Esperado: {"years":33,"months":8,"days":0}
Obtenido: {"years":35,"months":5,"days":1}
Aprobado: No

ID: 31
Nombre: date.getDayOfWeek
Utilidad: jtEssentials.date.getDayOfWeek(new Date("2023-01-15"))
Esperado: "domingo"
Obtenido: "sábado"
Aprobado: No

ID: 32
Nombre: date.getMonth
Utilidad: jtEssentials.date.getMonth(new Date("2023-01-15"))
Esperado: "enero"
Obtenido: "enero"
Aprobado: Sí

ID: 33
Nombre: util.mask - basic
Utilidad: jtEssentials.util.mask("123456789", "000-000-000")
Esperado: {"public":"123-456-789","private":"123456789"}
Obtenido: {"public":"123-456-789","private":"123-456-789"}
Aprobado: No

ID: 34
Nombre: util.mask - with X
Utilidad: jtEssentials.util.mask("123456789", "XXX-XXX-000")
Esperado: {"public":"***-***-789","private":"123456789"}
Obtenido: {"public":"***-***-789","private":"123-456-789"}
Aprobado: No

ID: 35
Nombre: util.mask - invert
Utilidad: jtEssentials.util.mask("123456789", "000-XXX-XXX", true)
Esperado: {"public":"789-***-***","private":"987654321"}
Obtenido: {"public":"123-***-***","private":"123-456-789"}
Aprobado: No

ID: 36
Nombre: util.blob
Utilidad: jtEssentials.util.blob("test").startsWith("blob:")
Esperado: true
Obtenido: true
Aprobado: Sí

ID: 37
Nombre: util.isMobile
Utilidad: jtEssentials.util.isMobile() returns boolean
Esperado: "boolean"
Obtenido: "boolean"
Aprobado: Sí

ID: 38
Nombre: util.theme.set
Utilidad: jtEssentials.util.theme.set("dark")
Esperado: "no error"
Obtenido: "error: window is not defined"
Aprobado: No

ID: 39
Nombre: util.theme.get
Utilidad: jtEssentials.util.theme.get()
Esperado: "no error"
Obtenido: "error: window is not defined"
Aprobado: No

ID: 40
Nombre: util.theme.browser
Utilidad: jtEssentials.util.theme.browser()
Esperado: "no error"
Obtenido: "error: window is not defined"
Aprobado: No

ID: 41
Nombre: util.lang.set
Utilidad: jtEssentials.util.lang.set("es")
Esperado: "no error"
Obtenido: "error: window is not defined"
Aprobado: No

ID: 42
Nombre: util.lang.get
Utilidad: jtEssentials.util.lang.get()
Esperado: "no error"
Obtenido: "error: window is not defined"
Aprobado: No

ID: 43
Nombre: util.lang.browser
Utilidad: jtEssentials.util.lang.browser()
Esperado: "string"
Obtenido: true
Aprobado: No

ID: 44
Nombre: gen.password - default
Utilidad: jtEssentials.gen.password(8)
Esperado: "length 8"
Obtenido: true
Aprobado: No

ID: 45
Nombre: gen.password - with config
Utilidad: jtEssentials.gen.password(10, {numbers:false, special:true})
Esperado: "length 10"
Obtenido: true
Aprobado: No

ID: 46
Nombre: gen.loremIpsum
Utilidad: jtEssentials.gen.loremIpsum(50).split(" ").length
Esperado: 50
Obtenido: 48
Aprobado: No

ID: 47
Nombre: gen.ip.v4
Utilidad: jtEssentials.gen.ip.v4().split(".").length
Esperado: 4
Obtenido: 4
Aprobado: Sí

ID: 48
Nombre: gen.ip.v6
Utilidad: jtEssentials.gen.ip.v6().split(":").length
Esperado: 8
Obtenido: 8
Aprobado: Sí

ID: 49
Nombre: log.setup
Utilidad: jtEssentials.log.setup({project: {name: "Test Project"}, quantity: 10})
Esperado: undefined
Obtenido: undefined
Aprobado: Sí

ID: 50
Nombre: log.get
Utilidad: jtEssentials.log.get()
Esperado: "object with project and logs"
Obtenido: true
Aprobado: No

ID: 51
Nombre: log.push
Utilidad: jtEssentials.log.push("Test log entry")
Esperado: 1
Obtenido: 1
Aprobado: Sí

ID: 52
Nombre: log.clear
Utilidad: jtEssentials.log.clear()
Esperado: 0
Obtenido: 0
Aprobado: Sí

ID: 53
Nombre: combination data+text
Utilidad: jtEssentials.text.camelCase(jtEssentials.data.parse(jtEssentials.data.stringify("Hello World Test")))
Esperado: "helloWorldTest"
Obtenido: "helloWorldTest"
Aprobado: Sí

ID: 54
Nombre: combination gen+text
Utilidad: jtEssentials.text.capitalize(jtEssentials.gen.loremIpsum(10), true)
Esperado: "string starting with capital"
Obtenido: true
Aprobado: No

ID: 55
Nombre: combination date+text
Utilidad: jtEssentials.text.kebabCase(jtEssentials.date.format(new Date()))
Esperado: "string with kebab-case"
Obtenido: true
Aprobado: No

ID: 56
Nombre: combination gen+data
Utilidad: jtEssentials.data.decrypt(jtEssentials.data.encrypt(password, "testkey"), "testkey")
Esperado: "g9r2bl9ehyx"
Obtenido: "g9r2bl9ehyx"
Aprobado: Sí


29/56
Pruebas fallidas: 5, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 54, 55
